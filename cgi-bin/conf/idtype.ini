##### idtype.ini - defines IdTypes

[GLOBAL]
# format_class defines namespace for format methods. not yet implemented
# format_class=GDxBase::Babel::CheckFormat
meta=eid

[chip_affy]
display_name=Affymetrix array
referent=array
defdb=affy
meta=name
sql_type=VARCHAR(32)

[chip_lumi]
display_name=Illumina array
referent=array
defdb=illumina
meta=name
sql_type=VARCHAR(32)

[reaction_ec]
display_name=EC number
referent=reaction
defdb=ec
sql_type=VARCHAR(16)

[gene_description]
display_name=gene description
referent=gene
meta=description
format=text
sql_type=VARCHAR(255)

[gene_ensembl]
display_name=Ensembl gene id
referent=gene
defdb=ensembl
format=/^ENS(?:[[:upper:]]{3}){0,1}G\d{11}$/
sql_type=VARCHAR(24)

[gene_entrez]
display_name=Entrez gene id
referent=gene
defdb=entrez
format=positive_integer
sql_type=INT(11)

[gene_known]
display_name=UCSC known gene id
referent=gene
defdb=ucsc_knowngene
sql_type=VARCHAR(25)

[gene_symbol]
display_name=gene symbol
referent=gene
meta=symbol
format=text
sql_type=VARCHAR(255)

[gene_symbol_synonym]
display_name=gene synonym
referent=gene
meta=symbol
format=text
sql_type=VARCHAR(255)

[protein_ipi]
display_name=IPI id
referent=protein
defdb=ipi
format=/^IPI\d+$/
sql_type=VARCHAR(11)

[protein_ipi_description]
display_name=IPI protein description
referent=protein
defdb=ipi
meta=description
format=text
sql_type=VARCHAR(255)

[function_omim]
display_name=OMIM number
referent=function
defdb=omim
format=positive_integer
sql_type=INT(11)

[function_omim_description]
display_name=OMIM description
referent=function
defdb=omim
format=text
sql_type=VARCHAR(255)

[organism_name_common]
display_name=organism
referent=organism
meta=name
format=/^[[:alpha:]]+$/
sql_type=VARCHAR(50)

[peptide_pepatlas]
display_name=Peptide Atlas id
referent=peptide
defdb=pepatlas
format=/^PAp\d{8}$/
sql_type=CHAR(11)

[probe_affy]
display_name=Affymetrix probeset id
referent=array_probe
defdb=affy
sql_type=VARCHAR(32)

# sequence_affy exists so we can link affy probes to their source sequences
# if we used (generic) sequence, the connection would be through gene...
[sequence_affy]
display_name=Affymetrix probeset sequence
referent=sequence
defdb=affy
sql_type=VARCHAR(24)

[probe_lumi]
display_name=Illumina probe id
referent=array_probe
defdb=illumina
sql_type=VARCHAR(32)

[probe_nu]
display_name=nucleotide universal id
referent=array_probe
defdb=illumina 
sql_type=VARCHAR(32)

# sequence_nu exists so we can link nu probes to their source sequences
# if we used (generic) sequence, the connection would be through gene...
[sequence_nu]
display_name=nucleotide universal id sequence
referent=sequence
defdb=lumi
sql_type=VARCHAR(24)

[protein_ncbi]
display_name=NCBI protein id
referent=protein
defdb=ncbi
description=The Protein database is a collection of sequences from several sources, including translations from annotated coding regions in GenBank, RefSeq and TPA, as well as records from SwissProt, PIR, PRF, and PDB.
sql_type=VARCHAR(24)

[protein_ensembl]
display_name=Ensembl protein id
referent=protein
defdb=ensembl
format=/^ENS(?:[[:upper:]]{3}){0,1}P\d{11}$/
sql_type=VARCHAR(24)

[protein_refseq]
display_name=RefSeq protein id
referent=protein
defdb=refseq
format=/^[NXYZ]P_\d+$/
sql_type=VARCHAR(16)

[protein_uniprot]
display_name=UniProt id
referent=protein
defdb=uniprot
sql_type=VARCHAR(24)

[transcript_ncbi]
display_name=GenBank transcript id
referent=transcript
defdb=genbank
sql_type=VARCHAR(24)

[transcript_refseq]
display_name=RefSeq transcript id
referent=transcript
defdb=refseq
format=/^(?:NM|NR|XM|XR|NG)_\d+$/
sql_type=VARCHAR(16)

[transcript_ensembl]
display_name=Ensembl transcript id
referent=transcript
defdb=ensembl
format=/^ENS(?:[[:upper:]]{3}){0,1}T\d{11}$/
sql_type=VARCHAR(24)

[gene_unigene]
display_name=UniGene id
referent=gene
defdb=entrez
format=/^[[:upper:]][[:lower:]]\.\d+$/
sql_type=VARCHAR(16)

[transcript_epcondb]
display_name=EpconDB transcript id
referent=transcript
defdb=epcondb
format=/^DT\.\d+$/
sql_type=VARCHAR(20)

[function_go]
display_name=GO id
referent=function
defdb=go
format=/^GO:\d+$/
sql_type=VARCHAR(10)
